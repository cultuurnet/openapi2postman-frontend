{"version":3,"sources":["components/Alert.js","components/HowTo.js","components/Spinner.js","components/Tooltip.js","Form.js","styles/GlobalStyle.js","components/Logos.js","components/Intro.js","App.js","index.js"],"names":["Container","styled","div","Alert","props","text","SwiperCore","use","Navigation","Pagination","STEPS","id","Title","h1","HowTo","slidesPerView","setWrapperSize","navigation","pagination","clickable","map","step","index","src","alt","width","height","Spinner","defaultOptions","loop","autoplay","animationData","require","rendererSettings","preserveAspectRatio","options","QuestionMark","Tooltip","data-tip","icon","faQuestionCircle","place","type","effect","FormWrapper","LinkButton","button","color","DownloadButton","Form","queryParams","URLSearchParams","window","location","search","useState","clientId","clientSecret","environment","apiType","get","otherUrl","authMethod","tokenGrantType","formData","setFormData","DEFAULT_ERROR_TEXT","loading","setLoading","hasDownloadStarted","setHasDownloadStarted","hasError","setHasError","errorText","setErrorText","PUBLIQ_STOPLIGHT_SCHEME","PUBLIQ_GITHUBUSERCONTENT_SCHEME","allEnvironments","label","value","none","scheme","environments","defaultEnvironment","filter","other","handleSubmit","a","startsWith","auth","callbackUrl","convert","postmanCollectionJson","apiName","info","name","document","createElement","file","Blob","JSON","stringify","href","URL","createObjectURL","download","click","onDownloadCompleted","console","log","resetError","onClick","className","onChange","e","target","disabled","placeholder","htmlFor","style","position","GlobalStyle","createGlobalStyle","Logos","Paragraph","p","Intro","rel","App","hideIntro","setHideIntro","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.9e64aa58.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst Container = styled.div`\n  padding: 15px;\n  background-color: #f2dede;\n  border: 1px solid #ebccd1;\n  color: #a94442;\n  margin-bottom: 2rem;\n  width: 500px;\n`;\n\nconst Alert = (props) => {\n  return <Container>{props.text}</Container>;\n};\n\nexport { Alert };\n","// Core modules imports are same as usual\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport 'swiper/swiper-bundle.min.css';\nimport 'swiper/swiper.min.css';\n\nimport SwiperCore, { Navigation, Pagination } from 'swiper';\nimport styled from 'styled-components';\nSwiperCore.use([Navigation, Pagination]);\n\nconst STEPS = [\n  {\n    id: 1,\n    text: 'Start by clicking the \"Import\" button in Postman.',\n  },\n  {\n    id: 2,\n    text: 'Drag and drop or select the JSON file you downloaded. Postman should show an overview of the included API. Click \"Import\" to continue.',\n  },\n  {\n    id: 3,\n    text: 'After the collection has been imported, click on the button with three dots next to its name. Next, click the \"Edit\" button in the drop-down menu that appears.',\n  },\n  {\n    id: 4,\n    text: 'Make sure the \"Auth\" tab of the collection is active. Scroll all the way to the bottom of the \"Auth\" tab, and click \"Get New Access Token\".',\n  },\n  {\n    id: 5,\n    text: 'Wait for the success modal to close or click the \"Proceed\" button.',\n  },\n  {\n    id: 6,\n    text: 'A modal to manage your tokens should appear, with a detail view of the new token. Click \"Use Token\". You are now ready to start making requests! If your token expires, follow the steps to get new access token again.',\n  },\n];\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  margin-bottom: 1.5rem;\n`;\n\nconst Title = styled.h1`\n  font-size: 3rem;\n  margin-bottom: 0;\n  text-align: center;\n`;\n\nconst HowTo = (props) => {\n  return (\n    <Container>\n      <Title>Installation guide</Title>\n      <Swiper\n        slidesPerView={1}\n        setWrapperSize={800}\n        navigation\n        pagination={{ clickable: true }}\n      >\n        {STEPS.map((step, index) => (\n          <SwiperSlide key={`step_${index}`}>\n            <img\n              src={`/postman-step-${step.id}.png`}\n              alt={`postman download step ${step.id}`}\n              width={700}\n              height={339}\n            />\n            <p>\n              {`${step.id}.`} {step.text}\n            </p>\n          </SwiperSlide>\n        ))}\n      </Swiper>\n    </Container>\n  );\n};\n\nexport { HowTo };\n","import Lottie from 'react-lottie';\n\nconst Spinner = (props) => {\n  const defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: require('../animations/spinner.json'),\n    rendererSettings: {\n      preserveAspectRatio: 'xMidYMid slice',\n    },\n  };\n\n  return <Lottie options={defaultOptions} height={50} width={50} />;\n};\n\nexport { Spinner };\n","import ReactTooltip from 'react-tooltip';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faQuestionCircle } from '@fortawesome/free-solid-svg-icons';\nimport styled from 'styled-components';\n\nconst QuestionMark = styled.div`\n  display: inline-block;\n  color: darkgrey;\n  position: absolute;\n  right: -25px;\n  top: 5px;\n`;\n\nconst Tooltip = (props) => {\n  const { text } = props;\n  return (\n    <QuestionMark>\n      <span data-tip={text}>\n        <FontAwesomeIcon icon={faQuestionCircle} />\n      </span>\n      <ReactTooltip place=\"bottom\" type=\"dark\" effect=\"solid\" />\n    </QuestionMark>\n  );\n};\n\nexport { Tooltip };\n","import convert from '@publiqbe/openapi2postman';\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { Alert } from './components/Alert';\nimport { HowTo } from './components/HowTo';\nimport { Spinner } from './components/Spinner';\nimport { Tooltip } from './components/Tooltip';\n\nconst FormWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  width: 300px;\n`;\n\nconst LinkButton = styled.button`\n  border: 0;\n  height: auto;\n  text-decoration: underline;\n  text-transform: none;\n  font-size: 1.5rem;\n  padding: 0;\n  letter-spacing: 0;\n  color: ${(props) => props.color || 'darkgrey'};\n`;\n\nconst DownloadButton = styled.button`\n  height: 50px;\n`;\n\nconst Form = (props) => {\n  const queryParams = new URLSearchParams(window.location.search);\n\n  const [formData, setFormData] = useState({\n    clientId: '',\n    clientSecret: '',\n    environment: '',\n    apiType: queryParams.get('api') ?? '',\n    otherUrl: '',\n    authMethod: '',\n    tokenGrantType: 'client_credentials',\n  });\n\n  const DEFAULT_ERROR_TEXT = 'Something went wrong, please try again later';\n\n  const [loading, setLoading] = useState(false);\n  const [hasDownloadStarted, setHasDownloadStarted] = useState(false);\n  const [hasError, setHasError] = useState(false);\n  const [errorText, setErrorText] = useState(DEFAULT_ERROR_TEXT);\n\n  const PUBLIQ_STOPLIGHT_SCHEME =\n    'https://stoplight.io/api/v1/projects/publiq/';\n  const PUBLIQ_GITHUBUSERCONTENT_SCHEME =\n    'https://raw.githubusercontent.com/cultuurnet/apidocs/';\n\n  const allEnvironments = [\n    {\n      label: 'Acceptance',\n      value: 'acc',\n    },\n    {\n      label: 'Testing',\n      value: 'test',\n    },\n    {\n      label: 'Production',\n      value: 'prod',\n    },\n  ];\n\n  const apiConfig = {\n    none: {\n      scheme: '',\n      authMethod: 'none',\n      environments: [],\n      defaultEnvironment: '',\n    },\n    'udb-entry': {\n      scheme: `${PUBLIQ_STOPLIGHT_SCHEME}uitdatabank/nodes/reference/entry.json?deref=optimizedBundle`,\n      authMethod: 'token',\n      environments: allEnvironments,\n      defaultEnvironment: 'test',\n    },\n    'udb-search': {\n      scheme: `${PUBLIQ_STOPLIGHT_SCHEME}uitdatabank/nodes/reference/search.json?deref=optimizedBundle`,\n      authMethod: 'x-client-id',\n      environments: allEnvironments,\n      defaultEnvironment: 'test',\n    },\n    'udb-taxonomy': {\n      scheme: `${PUBLIQ_STOPLIGHT_SCHEME}uitdatabank/nodes/reference/taxonomy.json?deref=optimizedBundle`,\n      authMethod: 'none',\n      environments: allEnvironments.filter(\n        (environment) => environment.value === 'prod',\n      ),\n      defaultEnvironment: 'prod',\n    },\n    'uitpas-api': {\n      scheme: `${PUBLIQ_STOPLIGHT_SCHEME}uitpas/nodes/reference/uitpas.json?deref=optimizedBundle`,\n      authMethod: 'token',\n      environments: allEnvironments,\n      defaultEnvironment: 'test',\n    },\n    'mpm-partner-api': {\n      scheme: `${PUBLIQ_STOPLIGHT_SCHEME}museumpassmusees/nodes/reference/partner-api.json?deref=optimizedBundle`,\n      authMethod: 'token',\n      environments: allEnvironments,\n      defaultEnvironment: 'test',\n    },\n    other: {\n      scheme: formData.otherUrl,\n      authMethod: formData.authMethod,\n      environments: allEnvironments,\n      defaultEnvironment: 'test',\n    },\n  };\n\n  const { scheme, authMethod, defaultEnvironment, environments } =\n    apiConfig[formData.apiType || 'none'];\n  const environment = formData.environment || defaultEnvironment;\n\n  const handleSubmit = async () => {\n    if (\n      formData.apiType === 'other' &&\n      !(\n        formData.otherUrl.startsWith(PUBLIQ_STOPLIGHT_SCHEME) ||\n        formData.otherUrl.startsWith(PUBLIQ_GITHUBUSERCONTENT_SCHEME)\n      )\n    ) {\n      setHasError(true);\n      setErrorText(\n        `API URL should start with ${PUBLIQ_STOPLIGHT_SCHEME} or ${PUBLIQ_GITHUBUSERCONTENT_SCHEME}`,\n      );\n      return;\n    }\n\n    if (formData.apiType === '') {\n      setHasError(true);\n      setErrorText(`Please select an API from the list`);\n      return;\n    }\n\n    const baseUrl = '';\n    const auth = {\n      authMethod: authMethod,\n      tokenGrantType: formData.tokenGrantType || 'client_credentials',\n      clientId: formData.clientId,\n      clientSecret: formData.clientSecret,\n      callbackUrl: 'https://oauth.pstmn.io/v1/callback',\n    };\n    try {\n      setLoading(true);\n      const postmanCollectionJson = await convert(\n        scheme,\n        environment,\n        baseUrl,\n        auth,\n      );\n      const apiName = postmanCollectionJson.info.name || 'postman-collection';\n      const a = document.createElement('a');\n      const file = new Blob([JSON.stringify(postmanCollectionJson)], {\n        type: 'text/plain',\n      });\n      a.href = URL.createObjectURL(file);\n      a.download = apiName + '.json';\n      a.click();\n      setHasDownloadStarted(true);\n      props.onDownloadCompleted(true);\n    } catch (err) {\n      console.log(err);\n      setHasError(true);\n      setErrorText(DEFAULT_ERROR_TEXT);\n    }\n    setLoading(false);\n  };\n\n  const resetError = () => {\n    setHasError(false);\n    setErrorText('');\n  };\n\n  const restartFlow = () => {\n    setHasDownloadStarted(false);\n    props.onDownloadCompleted(false);\n  };\n\n  return (\n    <>\n      {hasError && <Alert text={errorText} />}\n      {loading ? (\n        <Spinner />\n      ) : (\n        <>\n          {hasDownloadStarted ? (\n            <>\n              <HowTo />\n              <LinkButton onClick={restartFlow} color=\"#00aae5\">\n                Download another collection\n              </LinkButton>\n            </>\n          ) : (\n            <FormWrapper key=\"form-wrapper\">\n              <div>\n                <select\n                  className=\"u-full-width\"\n                  value={formData.apiType}\n                  onChange={(e) => {\n                    setFormData({ ...formData, apiType: e.target.value });\n                    resetError();\n                  }}\n                  id=\"apiType\"\n                >\n                  <option value=\"\" disabled>\n                    Select API\n                  </option>\n                  <option value=\"udb-entry\">UiTdatabank Entry API</option>\n                  <option value=\"udb-search\">UiTdatabank Search API</option>\n                  <option value=\"udb-taxonomy\">UiTdatabank Taxonomy API</option>\n                  <option value=\"uitpas-api\">UiTPAS API</option>\n                  <option value=\"mpm-partner-api\">\n                    museumPASSmusées Partner API\n                  </option>\n                  <option value=\"other\">Other API...</option>\n                </select>\n              </div>\n              {formData.apiType === 'other' && (\n                <div>\n                  <input\n                    className=\"u-full-width\"\n                    type=\"text\"\n                    placeholder=\"OpenAPI file url\"\n                    value={formData.otherUrl}\n                    onChange={(e) => {\n                      setFormData({ ...formData, otherUrl: e.target.value });\n                      resetError();\n                    }}\n                  />\n                </div>\n              )}\n              {formData.apiType !== '' && (\n                <div>\n                  <label htmlFor=\"environment\">Environment</label>\n                  <select\n                    className=\"u-full-width\"\n                    value={environment}\n                    onChange={(e) => {\n                      setFormData({ ...formData, environment: e.target.value });\n                      resetError();\n                    }}\n                    id=\"environment\"\n                  >\n                    {environments.map((environment) => (\n                      <option value={environment.value}>\n                        {environment.label}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              )}\n              <div>\n                {(authMethod !== 'none' || formData.apiType === 'other') && (\n                  <label htmlFor=\"authMethod\">Authentication</label>\n                )}\n                {formData.apiType === 'other' && (\n                  <select\n                    className=\"u-full-width\"\n                    value={formData.authMethod}\n                    onChange={(e) => {\n                      setFormData({ ...formData, authMethod: e.target.value });\n                      resetError();\n                    }}\n                    id=\"authMethod\"\n                  >\n                    <option value=\"none\">None</option>\n                    <option value=\"token\">Token</option>\n                    <option value=\"x-client-id\">\n                      Client identification (x-client-id header)\n                    </option>\n                  </select>\n                )}\n              </div>\n              {(authMethod === 'token' || authMethod === 'x-client-id') && (\n                <div>\n                  <input\n                    className=\"u-full-width\"\n                    type=\"text\"\n                    placeholder={`Client id (${environment} environment)`}\n                    value={formData.clientId}\n                    onChange={(e) => {\n                      setFormData({ ...formData, clientId: e.target.value });\n                      resetError();\n                    }}\n                  />\n                </div>\n              )}\n              {authMethod === 'token' && (\n                <div style={{ position: 'relative' }}>\n                  <input\n                    type=\"password\"\n                    className=\"u-full-width\"\n                    placeholder={`Client secret (${environment} environment)`}\n                    value={formData.clientSecret}\n                    onChange={(e) => {\n                      setFormData({\n                        ...formData,\n                        clientSecret: e.target.value,\n                      });\n                      resetError();\n                    }}\n                  />\n                  <Tooltip\n                    text={\n                      'Your client secret never leaves your browser. You can also leave this empty and enter it in Postman itself as the \"oauth2ClientSecret\" variable.'\n                    }\n                  />\n                </div>\n              )}\n              {authMethod === 'token' && (\n                <div>\n                  <label htmlFor=\"tokenGrantType\">Token type</label>\n                  <select\n                    className=\"u-full-width\"\n                    value={formData.tokenGrantType}\n                    onChange={(e) => {\n                      setFormData({\n                        ...formData,\n                        tokenGrantType: e.target.value,\n                      });\n                      resetError();\n                    }}\n                    id=\"tokenGrantType\"\n                  >\n                    <option value=\"client_credentials\">\n                      Client access token\n                    </option>\n                    <option value=\"authorization_code\">\n                      User access token\n                    </option>\n                  </select>\n                </div>\n              )}\n              <DownloadButton onClick={handleSubmit} className=\"button-primary\">\n                Download\n              </DownloadButton>\n            </FormWrapper>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport { Form };\n","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n    body {\n      margin: 0;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n        'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n        sans-serif;\n      -webkit-font-smoothing: antialiased;\n      -moz-osx-font-smoothing: grayscale;\n    }\n\n    code {\n      font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n        monospace;\n    }   \n\n    p,\n    input,\n    select,\n    button {\n      font-size: 1.5rem;\n    }\n\n    .swiper-container {\n      width: 800px;\n    }\n\n    .swiper-slide {\n      text-align: center;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      flex-direction: column;\n      width: 700px;\n      padding-bottom: 10px;\n    }\n\n    .swiper-button-next,\n    .swiper-button-prev {\n      color: #00AAE5;\n    }\n\n    .swiper-pagination-bullet-active {\n      background: #00AAE5;\n    }\n\n    .swiper-pagination-bullets {\n      bottom: 0 !important;\n    }\n`;\n\nexport { GlobalStyle };\n","import styled from 'styled-components';\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 250px;\n  margin: 5rem 0 2.5rem 0;\n`;\n\nconst Logos = (props) => {\n  return (\n    <Container>\n      <img\n        src=\"https://postman.publiq.be/publiq-logo.png\"\n        alt=\"publiq logo\"\n        width=\"130\"\n      />\n      <img\n        src=\"https://postman.publiq.be/postman-logo.png\"\n        alt=\"postman logo\"\n        width=\"100\"\n      />\n    </Container>\n  );\n};\n\nexport { Logos };\n","import styled from 'styled-components';\n\nconst Container = styled.div`\n  max-width: 500px;\n  background-color: #efefef;\n  padding: 15px 15px 0 15px;\n  border-radius: 5px;\n  margin-bottom: 2.5rem;\n`;\n\nconst Paragraph = styled.p`\n  margin-bottom: 15px;\n`;\n\nconst Intro = (props) => {\n  return (\n    <Container>\n      <Paragraph>\n        Ready to start playing around with our APIs? Use the form below to\n        download a personalized{' '}\n        <a href=\"https://www.postman.com/\" target=\"_blank\" rel=\"noreferrer\">\n          Postman\n        </a>{' '}\n        collection and start making API requests to our test environment in a\n        matter of seconds!\n      </Paragraph>\n      <Paragraph>\n        We also provide extensive{' '}\n        <a href=\"https://docs.publiq.be\" target=\"_blank\" rel=\"noreferrer\">\n          API documentation\n        </a>{' '}\n        with how-to guides, a technical reference for each API endpoint, and\n        info about authentication and error handling.\n      </Paragraph>\n    </Container>\n  );\n};\n\nexport { Intro };\n","import { Form } from './Form';\nimport React, { useState } from 'react';\nimport { GlobalStyle } from './styles/GlobalStyle';\nimport styled from 'styled-components';\nimport { Logos } from './components/Logos';\nimport { Intro } from './components/Intro';\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  flex-wrap: wrap;\n`;\n\nexport default function App() {\n  const [hideIntro, setHideIntro] = useState(false);\n\n  return (\n    <>\n      <GlobalStyle />\n      <Container className=\"App\">\n        <Logos />\n        {!hideIntro && <Intro />}\n        <Form onDownloadCompleted={setHideIntro} />\n      </Container>\n    </>\n  );\n}\n","import { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement,\n);\n"],"sourceRoot":""}