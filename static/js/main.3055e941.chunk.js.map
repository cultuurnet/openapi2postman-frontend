{"version":3,"sources":["components/Alert.js","components/Spinner.js","Form.js","components/Logos.js","components/Intro.js","App.js","index.js"],"names":["Alert","props","Container","styled","div","text","Spinner","defaultOptions","loop","autoplay","animationData","require","rendererSettings","preserveAspectRatio","options","height","width","FormWrapper","DownloadButton","button","Form","queryParams","URLSearchParams","window","location","search","useState","clientId","clientSecret","environment","apiType","get","otherUrl","formData","setFormData","DEFAULT_ERROR_TEXT","loading","setLoading","hasError","setHasError","errorText","setErrorText","PUBLIQ_STOPLIGHT_SCHEME","UDB_ENTRY_SCHEME_URL","UITPAS_API_SCHEME_URL","handleSubmit","a","startsWith","scheme","auth","tokenGrantType","convert","postmanCollectionJson","document","createElement","file","Blob","JSON","stringify","type","href","URL","createObjectURL","download","click","console","log","resetError","class","placeholder","value","onChange","e","target","for","id","selected","disabled","onClick","className","Logos","src","alt","Intro","Paragraph","p","App","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.3055e941.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst Alert = (props) => {\n  const Container = styled.div`\n    padding: 15px;\n    background-color: #f2dede;\n    border: 1px solid #ebccd1;\n    color: #a94442;\n    margin-bottom: 2rem;\n    width: 500px;\n  `;\n  return <Container>{props.text}</Container>;\n};\n\nexport { Alert };\n","import Lottie from 'react-lottie';\n\nconst Spinner = (props) => {\n  const defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: require('../animations/spinner.json'),\n    rendererSettings: {\n      preserveAspectRatio: 'xMidYMid slice',\n    },\n  };\n\n  return <Lottie options={defaultOptions} height={50} width={50} />;\n};\n\nexport { Spinner };\n","import convert from '@publiqbe/openapi2postman';\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { Alert } from './components/Alert';\nimport { Spinner } from './components/Spinner';\n\nconst FormWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  width: 300px;\n`;\n\nconst DownloadButton = styled.button`\n  height: 50px;\n`;\n\nconst Form = () => {\n  const queryParams = new URLSearchParams(window.location.search);\n\n  const [formData, setFormData] = useState({\n    clientId: '',\n    clientSecret: '',\n    environment: '',\n    apiType: queryParams.get('api') ?? '',\n    otherUrl: '',\n  });\n\n  const DEFAULT_ERROR_TEXT = 'Something went wrong, please try again later';\n\n  const [loading, setLoading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n  const [errorText, setErrorText] = useState(DEFAULT_ERROR_TEXT);\n\n  const PUBLIQ_STOPLIGHT_SCHEME =\n    'https://stoplight.io/api/v1/projects/publiq/';\n  const UDB_ENTRY_SCHEME_URL = `${PUBLIQ_STOPLIGHT_SCHEME}uitdatabank/nodes/reference/entry.json?deref=optimizedBundle`;\n  const UITPAS_API_SCHEME_URL = `${PUBLIQ_STOPLIGHT_SCHEME}uitpas/nodes/reference/UiTPAS.v2.json?deref=optimizedBundle`;\n\n  const handleSubmit = async () => {\n    if (\n      formData.apiType === 'other' &&\n      !formData.otherUrl.startsWith(PUBLIQ_STOPLIGHT_SCHEME)\n    ) {\n      setHasError(true);\n      setErrorText(`API URL should start with ${PUBLIQ_STOPLIGHT_SCHEME}`);\n      return;\n    }\n\n    if (formData.apiType === '') {\n      setHasError(true);\n      setErrorText(`Please select an API from the list`);\n      return;\n    }\n\n    let scheme;\n    switch (formData.apiType) {\n      case 'udb-entry':\n        scheme = UDB_ENTRY_SCHEME_URL;\n        break;\n      case 'uitpas-api':\n        scheme = UITPAS_API_SCHEME_URL;\n        break;\n      case 'other':\n        scheme = formData.otherUrl;\n        break;\n      default:\n        scheme = UDB_ENTRY_SCHEME_URL;\n    }\n    const environment = 'test';\n    const baseUrl = '';\n    const auth = {\n      tokenGrantType: 'client_credentials',\n      clientId: formData.clientId,\n      clientSecret: formData.clientSecret,\n    };\n    try {\n      setLoading(true);\n      const postmanCollectionJson = await convert(\n        scheme,\n        environment,\n        baseUrl,\n        auth,\n      );\n      const a = document.createElement('a');\n      const file = new Blob([JSON.stringify(postmanCollectionJson)], {\n        type: 'text/plain',\n      });\n      a.href = URL.createObjectURL(file);\n      a.download =\n        formData.apiType !== 'other'\n          ? `${formData.apiType}.json`\n          : 'postman-collection.json';\n      a.click();\n    } catch (err) {\n      console.log(err);\n      setHasError(true);\n      setErrorText(DEFAULT_ERROR_TEXT);\n    }\n    setLoading(false);\n  };\n\n  const resetError = () => {\n    setHasError(false);\n    setErrorText('');\n  };\n\n  return (\n    <>\n      {hasError && <Alert text={errorText} />}\n      {loading ? (\n        <Spinner />\n      ) : (\n        <FormWrapper key=\"form-wrapper\">\n          <div>\n            <input\n              class=\"u-full-width\"\n              type=\"text\"\n              placeholder=\"client id\"\n              value={formData.clientId}\n              onChange={(e) => {\n                setFormData({ ...formData, clientId: e.target.value });\n                resetError();\n              }}\n            />\n          </div>\n          <div>\n            <input\n              type=\"password\"\n              class=\"u-full-width\"\n              placeholder=\"client secret\"\n              value={formData.clientSecret}\n              onChange={(e) => {\n                setFormData({ ...formData, clientSecret: e.target.value });\n                resetError();\n              }}\n            />\n          </div>\n          <div>\n            <label for=\"apiType\">API</label>\n            <select\n              class=\"u-full-width\"\n              value={formData.apiType}\n              onChange={(e) => {\n                setFormData({ ...formData, apiType: e.target.value });\n                resetError();\n              }}\n              id=\"apiType\"\n            >\n              <option value=\"\" selected disabled>\n                Select API\n              </option>\n              <option value=\"udb-entry\">UiTdatabank Entry API</option>\n              <option value=\"uitpas-api\">UiTPAS API</option>\n              <option value=\"other\">Other...</option>\n            </select>\n          </div>\n          {formData.apiType === 'other' && (\n            <div>\n              <input\n                class=\"u-full-width\"\n                type=\"text\"\n                placeholder=\"url\"\n                value={formData.otherUrl}\n                onChange={(e) => {\n                  setFormData({ ...formData, otherUrl: e.target.value });\n                  resetError();\n                }}\n              />\n            </div>\n          )}\n          <DownloadButton onClick={handleSubmit} className=\"button-primary\">\n            Download\n          </DownloadButton>\n        </FormWrapper>\n      )}\n    </>\n  );\n};\n\nexport { Form };\n","import styled from 'styled-components';\n\nconst Logos = (props) => {\n  const Container = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    width: 250px;\n    margin: 5rem 0 2.5rem 0;\n  `;\n  return (\n    <Container>\n      <img\n        src=\"https://cultuurnet.github.io/openapi2postman-frontend/publiq-logo.png\"\n        alt=\"publiq logo\"\n        width=\"130\"\n      />\n      <img\n        src=\"https://cultuurnet.github.io/openapi2postman-frontend/postman-logo.png\"\n        alt=\"postman logo\"\n        width=\"100\"\n      />\n    </Container>\n  );\n};\n\nexport { Logos };\n","import styled from 'styled-components';\n\nconst Intro = (props) => {\n  const Container = styled.div`\n    max-width: 500px;\n    background-color: #efefef;\n    padding: 15px;\n    border-radius: 5px;\n    margin-bottom: 2.5rem;\n  `;\n\n  const Paragraph = styled.p`\n    margin-bottom: 0;\n  `;\n  return (\n    <Container>\n      <Paragraph>\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\n        tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim\n        veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea\n        commodo consequat.\n      </Paragraph>\n    </Container>\n  );\n};\n\nexport { Intro };\n","import './index.css';\nimport { Form } from './Form';\nimport styled from 'styled-components';\nimport { Logos } from './components/Logos';\nimport { Intro } from './components/Intro';\n\nexport default function App() {\n  const Container = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    flex-wrap: wrap;\n  `;\n\n  return (\n    <Container className=\"App\">\n      <Logos />\n      <Intro />\n      <Form />\n    </Container>\n  );\n}\n","import { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement,\n);\n"],"sourceRoot":""}