{"version":3,"sources":["components/Alert.js","components/Spinner.js","Form.js","components/Logos.js","components/Intro.js","App.js","index.js"],"names":["Alert","props","Container","styled","div","text","Spinner","defaultOptions","loop","autoplay","animationData","require","rendererSettings","preserveAspectRatio","options","height","width","Form","queryParams","URLSearchParams","window","location","search","useState","clientId","clientSecret","environment","apiType","get","otherUrl","formData","setFormData","loading","setLoading","hasError","setHasError","errorText","setErrorText","PUBLIQ_STOPLIGHT_SCHEME","UDB_ENTRY_SCHEME_URL","UITPAS_API_SCHEME_URL","handleSubmit","a","startsWith","scheme","auth","tokenGrantType","convert","postmanCollectionJson","document","createElement","file","Blob","JSON","stringify","type","href","URL","createObjectURL","download","click","console","log","FormWrapper","placeholder","value","onChange","e","target","for","id","onClick","class","Logos","src","alt","Intro","Paragraph","p","App","className","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.7e866942.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst Alert = (props) => {\n  const Container = styled.div`\n    padding: 15px;\n    background-color: #f2dede;\n    border: 1px solid #ebccd1;\n    color: #a94442;\n    margin-bottom: 2rem;\n  `;\n  return <Container>{props.text}</Container>;\n};\n\nexport { Alert };\n","import Lottie from 'react-lottie';\n\nconst Spinner = (props) => {\n  const defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: require('../animations/spinner.json'),\n    rendererSettings: {\n      preserveAspectRatio: 'xMidYMid slice',\n    },\n  };\n\n  return <Lottie options={defaultOptions} height={50} width={50} />;\n};\n\nexport { Spinner };\n","import convert from '@publiqbe/openapi2postman';\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { Alert } from './components/Alert';\nimport { Spinner } from './components/Spinner';\n\nconst Form = () => {\n  const queryParams = new URLSearchParams(window.location.search);\n\n  const [formData, setFormData] = useState({\n    clientId: '',\n    clientSecret: '',\n    environment: '',\n    apiType: queryParams.get('api') ?? 'udb-entry',\n    otherUrl: '',\n  });\n\n  const [loading, setLoading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n  const [errorText, setErrorText] = useState(\n    'Something went wrong, please try again later',\n  );\n\n  const PUBLIQ_STOPLIGHT_SCHEME =\n    'https://stoplight.io/api/v1/projects/publiq/';\n  const UDB_ENTRY_SCHEME_URL = `${PUBLIQ_STOPLIGHT_SCHEME}uitdatabank/nodes/reference/entry.json?deref=optimizedBundle`;\n  const UITPAS_API_SCHEME_URL = `${PUBLIQ_STOPLIGHT_SCHEME}uitpas/nodes/reference/UiTPAS.v2.json?deref=optimizedBundle`;\n\n  const handleSubmit = async () => {\n    if (\n      formData.apiType === 'other' &&\n      !formData.otherUrl.startsWith(PUBLIQ_STOPLIGHT_SCHEME)\n    ) {\n      setHasError(true);\n      setErrorText(`API URL should start with ${PUBLIQ_STOPLIGHT_SCHEME}`);\n      return;\n    }\n\n    let scheme;\n    switch (formData.apiType) {\n      case 'udb-entry':\n        scheme = UDB_ENTRY_SCHEME_URL;\n        break;\n      case 'uitpas-api':\n        scheme = UITPAS_API_SCHEME_URL;\n        break;\n      case 'other':\n        scheme = formData.otherUrl;\n        break;\n      default:\n        scheme = UDB_ENTRY_SCHEME_URL;\n    }\n    const environment = 'test';\n    const baseUrl = '';\n    const auth = {\n      tokenGrantType: 'client_credentials',\n      clientId: formData.clientId,\n      clientSecret: formData.clientSecret,\n    };\n    try {\n      setLoading(true);\n      const postmanCollectionJson = await convert(\n        scheme,\n        environment,\n        baseUrl,\n        auth,\n      );\n      const a = document.createElement('a');\n      const file = new Blob([JSON.stringify(postmanCollectionJson)], {\n        type: 'text/plain',\n      });\n      a.href = URL.createObjectURL(file);\n      a.download = 'postman-collection.json';\n      a.click();\n    } catch (err) {\n      console.log(err);\n      setHasError(true);\n    }\n    setLoading(false);\n  };\n\n  const FormWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n  `;\n\n  return (\n    <>\n      {hasError && <Alert text={errorText} />}\n      {loading ? (\n        <Spinner />\n      ) : (\n        <FormWrapper>\n          <div>\n            <input\n              type=\"text\"\n              placeholder=\"client id\"\n              value={formData.clientId}\n              onChange={(e) =>\n                setFormData({ ...formData, clientId: e.target.value })\n              }\n            />\n          </div>\n          <div>\n            <input\n              type=\"password\"\n              placeholder=\"client secret\"\n              value={formData.clientSecret}\n              onChange={(e) =>\n                setFormData({ ...formData, clientSecret: e.target.value })\n              }\n            />\n          </div>\n          <div>\n            <label for=\"apiType\">API</label>\n            <select\n              value={formData.apiType}\n              onChange={(e) =>\n                setFormData({ ...formData, apiType: e.target.value })\n              }\n              id=\"apiType\"\n            >\n              <option value=\"udb-entry\">UiTdatabank Entry API</option>\n              <option value=\"uitpas-api\">UiTPAS API</option>\n              <option value=\"other\">Other...</option>\n            </select>\n          </div>\n          {formData.apiType === 'other' && (\n            <div>\n              <input\n                type=\"text\"\n                placeholder=\"url\"\n                value={formData.otherUrl}\n                onChange={(e) =>\n                  setFormData({ ...formData, otherUrl: e.target.value })\n                }\n              />\n            </div>\n          )}\n          <button onClick={handleSubmit} class=\"button-primary\">\n            Download\n          </button>\n        </FormWrapper>\n      )}\n    </>\n  );\n};\n\nexport { Form };\n","import styled from 'styled-components';\n\nconst Logos = (props) => {\n  const Container = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    width: 300px;\n    margin: 5rem 0 2.5rem 0;\n  `;\n  return (\n    <Container>\n      <img\n        src=\"https://cultuurnet.github.io/openapi2postman-frontend/publiq-logo.png\"\n        alt=\"publiq logo\"\n        width=\"150\"\n      />\n      <img\n        src=\"https://cultuurnet.github.io/openapi2postman-frontend/postman-logo.png\"\n        alt=\"postman logo\"\n        width=\"120\"\n      />\n    </Container>\n  );\n};\n\nexport { Logos };\n","import styled from 'styled-components';\n\nconst Intro = (props) => {\n  const Container = styled.div`\n    max-width: 500px;\n    background-color: #efefef;\n    padding: 15px;\n    border-radius: 5px;\n    margin-bottom: 2.5rem;\n  `;\n\n  const Paragraph = styled.p`\n    margin-bottom: 0;\n  `;\n  return (\n    <Container>\n      <Paragraph>\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\n        tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim\n        veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea\n        commodo consequat.\n      </Paragraph>\n    </Container>\n  );\n};\n\nexport { Intro };\n","import './index.css';\nimport { Form } from './Form';\nimport styled from 'styled-components';\nimport { Logos } from './components/Logos';\nimport { Intro } from './components/Intro';\n\nexport default function App() {\n  const Container = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    flex-wrap: wrap;\n  `;\n\n  return (\n    <Container className=\"App\">\n      <Logos />\n      <Intro />\n      <Form />\n    </Container>\n  );\n}\n","import { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement,\n);\n"],"sourceRoot":""}